import os
from datetime import datetime
from bson import ObjectId

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from config import logger
from utils.self_assessment_utils import save_self_assessment, get_contests_by_type, get_activity_types
from utils.file_utils import compress_and_save_image
from keyboards.contest_keyboard import get_contest_selection_keyboard, get_cancel_keyboard
from utils.self_assessment_states import SelfAssessmentStates
from keyboards.event_type_keyboard import get_event_type_keyboard_with_pagination

router = Router()

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
UPLOAD_FOLDER = "uploads"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

@router.message(Command("self_assessment"))
async def cmd_self_assessment(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /self_assessment"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} ({message.from_user.full_name}) –Ω–∞—á–∞–ª –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ª–∏—Å—Ç–∞ —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è")
    await state.set_state(SelfAssessmentStates.selecting_event_type)
    await state.update_data(confirmation_files=[])  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    
    # –ë–æ–ª–µ–µ –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–µ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await message.answer(
        "üìù –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –õ–ò–°–¢–ê –°–ê–ú–û–û–ë–°–õ–ï–î–û–í–ê–ù–ò–Ø\n\n"
        "–°–µ–π—á–∞—Å –í–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É üëá\n\n"
        "–ï—Å–ª–∏ –Ω—É–∂–Ω—ã–π —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è¬ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
        reply_markup=await get_event_type_keyboard_with_pagination()
    )

@router.callback_query(lambda query: query.data.startswith("event_page_"))
async def process_event_type_pagination(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞ —Ç–∏–ø–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π"""
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ callback_data
    page = int(callback.data.split("_")[2])
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–µ—Ä–µ—à–µ–ª –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É {page} —Å–ø–∏—Å–∫–∞ —Ç–∏–ø–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
    await callback.message.edit_text(
        "üìù –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –õ–ò–°–¢–ê –°–ê–ú–û–û–ë–°–õ–ï–î–û–í–ê–ù–ò–Ø\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ ¬´‚óÄÔ∏è –ù–∞–∑–∞–¥¬ª –∏ ¬´–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è¬ª –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.",
        reply_markup=await get_event_type_keyboard_with_pagination(page=page)
    )

@router.callback_query(lambda query: query.data.startswith("event_") and not query.data.startswith("event_page_"))
async def process_event_type_callback(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —á–µ—Ä–µ–∑ callback"""
    # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏–∑ callback_data
    event_code = callback.data.replace("event_", "")
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –≤—ã–±—Ä–∞–ª —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event_code}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    event_types = await get_activity_types()
    
    # –ò—â–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–¥ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    full_event_code = None
    for code, _ in event_types:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –∫–æ–¥ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞
        if code.startswith(event_code):
            full_event_code = code
            break
    
    if not full_event_code:
        logger.error(f"–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª–Ω—ã–π –∫–æ–¥ –¥–ª—è: {event_code}")
        await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–∏–ø–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    event_types_dict = dict(event_types)
    event_type = event_types_dict.get(full_event_code, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
    logger.info(f"–ü–æ–ª–Ω—ã–π –∫–æ–¥: {full_event_code}, –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {event_type}")
    
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø –∫–æ–Ω–∫—É—Ä—Å–∞ (2.1.1, 2.1.2, 2.1.3)
    if full_event_code in ["2.1.1", "2.1.2", "2.1.3"]:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –≤—ã–±—Ä–∞–ª —Ç–∏–ø –∫–æ–Ω–∫—É—Ä—Å–∞: {full_event_code}")
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ–Ω–∫—É—Ä—Å—ã –±–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Ç–∏–ø—É
        contests = await get_contests_by_type()
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(contests)} –∫–æ–Ω–∫—É—Ä—Å–æ–≤")
        await state.update_data(event_type=event_type)
        await state.set_state(SelfAssessmentStates.selecting_contest)
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—ã–±–æ—Ä–æ–º –∫–æ–Ω–∫—É—Ä—Å–∞
        contest_keyboard = get_contest_selection_keyboard(contests)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ –∫–æ–Ω–µ—Ü –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        contest_keyboard.inline_keyboard.append([InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", 
            callback_data="back_to_event_selection"
        )])
        
        await callback.message.edit_text(
            f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏: {event_type}\n\n"
            f"–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω–∫—É—Ä—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É üëá",
            reply_markup=contest_keyboard
        )
    else:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –≤—ã–±—Ä–∞–ª –æ–±—ã—á–Ω—ã–π —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {full_event_code}")
        await state.update_data(event_type=event_type)
        await state.set_state(SelfAssessmentStates.entering_event_name)
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã –∏ –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è", callback_data="back_to_event_selection")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
        ])
        await callback.message.edit_text(
            f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏: {event_type}\n\n"
            f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º):\n\n"
            f"–ù–∞–ø—Ä–∏–º–µ—Ä: \"–ì–æ—Ä–æ–¥—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ\" –∏–ª–∏ \"–ö–æ–Ω–∫—É—Ä—Å —á—Ç–µ—Ü–æ–≤\"",
            reply_markup=keyboard
        )

@router.callback_query(SelfAssessmentStates.selecting_contest, lambda query: query.data.startswith("self_contest_") or query.data == "new_contest")
async def process_contest_selection(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—É—Ä—Å–∞"""
    if callback.data == "new_contest":
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –≤—ã–±—Ä–∞–ª —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞")
        await state.set_state(SelfAssessmentStates.entering_contest_name)
        await callback.message.answer(
            "üìù –í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞\n\n"
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞ (–Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º):",
            reply_markup=get_cancel_keyboard()
        )
    else:
        try:
            # –ü–æ–ª—É—á–∞–µ–º ID –∫–æ–Ω–∫—É—Ä—Å–∞ –∏–∑ callback data
            contest_id = callback.data.split("_")[2]  # –¢–µ–ø–µ—Ä—å ID –≤ 3-–π —á–∞—Å—Ç–∏ (self_contest_ID)
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –≤—ã–±—Ä–∞–ª —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω–∫—É—Ä—Å —Å ID: {contest_id}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∫–æ–Ω–∫—É—Ä—Å–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            from services.database import db
            
            # –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ObjectId, –µ—Å–ª–∏ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ
            try:
                oid = ObjectId(contest_id)
                contest = db.contests.find_one({"_id": oid})
                logger.info(f"–ü–æ–∏—Å–∫ –∫–æ–Ω–∫—É—Ä—Å–∞ –ø–æ ObjectId: {oid}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {contest is not None}")
            except:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ ObjectId, –∏—â–µ–º –ø–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É ID
                logger.info(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å ID {contest_id} –≤ ObjectId, –∏—â–µ–º –ø–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É ID")
                contest = db.contests.find_one({"_id": contest_id})
                logger.info(f"–ü–æ–∏—Å–∫ –∫–æ–Ω–∫—É—Ä—Å–∞ –ø–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É ID: {contest_id}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {contest is not None}")
            
            if contest:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—É—Ä—Å–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
                contest_name = contest.get("name", "")
                logger.info(f"–ù–∞–π–¥–µ–Ω –∫–æ–Ω–∫—É—Ä—Å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º: {contest_name}")
                
                await state.update_data(
                    contest_id=contest_id,
                    event_name=contest_name  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
                )
                
                # –ü–µ—Ä–µ—Ö–æ–¥–∏–º —Å—Ä–∞–∑—É –∫ –æ–ø–∏—Å–∞–Ω–∏—é –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
                await state.set_state(SelfAssessmentStates.entering_event_description)
                
                # –û—Ç–≤–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                await callback.message.delete()  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º
                await callback.message.answer(
                    f"‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–æ–Ω–∫—É—Ä—Å: {contest_name}\n\n"
                    f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∫—Ä–∞—Ç–∫—É—é —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º):\n\n"
                    f"–ù–∞–ø—Ä–∏–º–µ—Ä: \"–£—á–∞—Å—Ç–∏–µ –≤ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥–µ\" –∏–ª–∏ \"–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞\"",
                    reply_markup=get_cancel_keyboard()
                )
                # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å—ã –∑–∞–≥—Ä—É–∑–∫–∏
                await callback.answer()
            else:
                # –ï—Å–ª–∏ –∫–æ–Ω–∫—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                logger.error(f"–ö–æ–Ω–∫—É—Ä—Å —Å ID {contest_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                await callback.answer("–û—à–∏–±–∫–∞: –∫–æ–Ω–∫—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
                
                # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ
                await state.update_data(contest_id=contest_id)
                await state.set_state(SelfAssessmentStates.entering_event_name)
                await callback.message.answer(
                    "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω–∫—É—Ä—Å.\n\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º):",
                    reply_markup=get_cancel_keyboard()
                )
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—É—Ä—Å–∞: {str(e)}")
            await callback.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–æ–Ω–∫—É—Ä—Å–∞")
            await callback.message.answer(
                "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.\n\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º):",
                reply_markup=get_cancel_keyboard()
            )
            await state.set_state(SelfAssessmentStates.entering_event_name)

@router.message(SelfAssessmentStates.entering_contest_name)
async def process_contest_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞"""
    contest_name = message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤–≤–µ–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞: {contest_name}")
    await state.update_data(contest_name=contest_name)
    await state.set_state(SelfAssessmentStates.entering_event_name)
    await message.answer(
        f"‚úÖ –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–≤—ã–π –∫–æ–Ω–∫—É—Ä—Å: {contest_name}\n\n"
        f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º):\n\n"
        f"–ù–∞–ø—Ä–∏–º–µ—Ä: \"–†–∞–π–æ–Ω–Ω–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–µ\" –∏–ª–∏ \"–ö–æ–Ω–∫—É—Ä—Å —á—Ç–µ—Ü–æ–≤\"",
        reply_markup=get_cancel_keyboard()
    )

@router.message(SelfAssessmentStates.entering_event_name)
async def process_event_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"""
    event_name = message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤–≤–µ–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event_name}")
    await state.update_data(event_name=event_name)
    await state.set_state(SelfAssessmentStates.entering_event_description)
    await message.answer(
        f"‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {event_name}\n\n"
        f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∫—Ä–∞—Ç–∫—É—é —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º):\n\n"
        f"–ù–∞–ø—Ä–∏–º–µ—Ä: \"–£—á–∞—Å—Ç–∏–µ –≤ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥–µ\" –∏–ª–∏ \"–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞\"",
        reply_markup=get_cancel_keyboard()
    )

@router.message(SelfAssessmentStates.entering_event_description)
async def process_event_description(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"""
    description = message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤–≤–µ–ª —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {description[:50]}...")
    await state.update_data(description=description)
    await state.set_state(SelfAssessmentStates.entering_event_result)
    await message.answer(
        f"‚úÖ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\n\n"
        f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—á–∞—Å—Ç–∏—è (–Ω–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç–æ–º):\n\n"
        f"–ù–∞–ø—Ä–∏–º–µ—Ä: \"–î–∏–ø–ª–æ–º I —Å—Ç–µ–ø–µ–Ω–∏\" –∏–ª–∏ \"–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞\"",
        reply_markup=get_cancel_keyboard()
    )

@router.message(SelfAssessmentStates.entering_event_result)
async def process_event_result(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —É—á–∞—Å—Ç–∏—è"""
    result = message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤–≤–µ–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—á–∞—Å—Ç–∏—è: {result[:50]}...")
    await state.update_data(result=result)
    await state.set_state(SelfAssessmentStates.entering_social_media_link)
    await message.answer(
        f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —É—á–∞—Å—Ç–∏—è: {result}\n\n"
        f"–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å)\n"
        f"–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ \"–Ω–µ—Ç\", –µ—Å–ª–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–µ—Ç",
        reply_markup=get_cancel_keyboard()
    )

@router.message(SelfAssessmentStates.entering_social_media_link)
async def process_social_media_link(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é"""
    social_media_link = None if message.text.lower() == "–Ω–µ—Ç" else message.text
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤–≤–µ–ª —Å—Å—ã–ª–∫—É –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é: {social_media_link if social_media_link else '–Ω–µ—Ç'}")
    await state.update_data(social_media_link=social_media_link)
    await state.set_state(SelfAssessmentStates.uploading_confirmation_file)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏" –∏ –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞"
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÑ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", callback_data="skip_photo")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
    ])
    
    await message.answer(
        f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞\n\n"
        f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:\n"
        f"üì± –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ –≥—Ä–∞–º–æ—Ç—É, –¥–∏–ø–ª–æ–º –∏–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ\n\n"
        f"‚ùó <b>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ</b>: –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–∏–¥–æ–≤ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π.\n"
        f"–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏¬ª.\n\n"
        f"‚ùì –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ: –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ üìé –∏–ª–∏ üì∑ —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞, "
        f"–∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ '–ö–∞–º–µ—Ä–∞' –∏–ª–∏ '–ì–∞–ª–µ—Ä–µ—è'",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@router.message(SelfAssessmentStates.uploading_confirmation_file, F.photo)
async def process_confirmation_photo(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    file_id = message.photo[-1].file_id
    file = await message.bot.get_file(file_id)
    file_path = file.file_path
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
    timestamp = datetime.now().strftime('%Y%m%d_%H%M%S')
    original_name = f"photo_{timestamp}.jpg"
    unique_filename = f"{file_id}.jpg"
    
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–æ—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {original_name} (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ {unique_filename})")
    
    # –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ü–µ–ª–µ–≤–æ–º—É —Ñ–∞–π–ª—É
    target_file_path = os.path.join(UPLOAD_FOLDER, unique_filename)
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    temp_file_path = os.path.join(UPLOAD_FOLDER, f"temp_{unique_filename}")
    await message.bot.download_file(file_path, temp_file_path)
    
    # –°–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    success = compress_and_save_image(temp_file_path, target_file_path)
    if not success:
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª
        os.rename(temp_file_path, target_file_path)
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∂–∞—Ç—å —Ñ–æ—Ç–æ {original_name}, —Å–æ—Ö—Ä–∞–Ω–µ–Ω –æ—Ä–∏–≥–∏–Ω–∞–ª")
    else:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        os.remove(temp_file_path)
    
    logger.info(f"–§–æ—Ç–æ {original_name} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ø–∞–ø–∫—É {UPLOAD_FOLDER}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    confirmation_files = data.get("confirmation_files", [])
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ (ID –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è)
    file_info = {
        "file_id": file_id,
        "original_name": original_name,
        "saved_name": unique_filename
    }
    confirmation_files.append(file_info)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(confirmation_files=confirmation_files)
    logger.info(f"–§–æ—Ç–æ {original_name} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {len(confirmation_files)}")
    
    await message.answer(
        f"‚úÖ –§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ (–≤—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {len(confirmation_files)})\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ:\n"
        f"1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ\n"
        f"2Ô∏è‚É£ –ù–∞–∂–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /done, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ",
        reply_markup=get_cancel_keyboard()
    )

@router.message(SelfAssessmentStates.uploading_confirmation_file, Command("done"))
async def finish_uploading_files(message: Message, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–≤–µ—Ä—à–∏–ª –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤")
    data = await state.get_data()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    confirmation_files = data.get("confirmation_files", [])
    files_count = len(confirmation_files)
    
    if files_count == 0:
        # –í–º–µ—Å—Ç–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã, —Å–æ–æ–±—â–∞–µ–º —á—Ç–æ –±—É–¥–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–æ –±–µ–∑ –Ω–∏—Ö
        # –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –î–∞, –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π", callback_data="confirm_no_photos")],
            [InlineKeyboardButton(text="‚ùå –ù–µ—Ç, –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", callback_data="add_photos")]
        ])
        
        await message.answer(
            "‚ùó –í—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\n\n"
            "–î–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≤–∏–¥–æ–≤ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π.\n"
            "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π?",
            reply_markup=keyboard
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
    await save_self_assessment(
        user_id=message.from_user.id,
        event_type=data.get("event_type"),
        event_name=data.get("event_name"),
        description=data.get("description"),
        result=data.get("result"),
        social_media_link=data.get("social_media_link"),
        confirmation_files=confirmation_files,
        contest_id=data.get("contest_id")
    )
    logger.info(f"–î–∞–Ω–Ω—ã–µ —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É")
    
    await message.answer(
        f"üéâ –ì–û–¢–û–í–û! üéâ\n\n"
        f"–í–∞—à –ª–∏—Å—Ç —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\n"
        f"–í—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏ {files_count} {get_files_word(files_count)}\n\n"
        f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!",
        reply_markup=None
    )
    await state.clear()

@router.callback_query(SelfAssessmentStates.uploading_confirmation_file, lambda query: query.data == "confirm_no_photos")
async def confirm_no_photos(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
    data = await state.get_data()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    await save_self_assessment(
        user_id=callback.from_user.id,
        event_type=data.get("event_type"),
        event_name=data.get("event_name"),
        description=data.get("description"),
        result=data.get("result"),
        social_media_link=data.get("social_media_link"),
        confirmation_files=[],
        contest_id=data.get("contest_id")
    )
    logger.info(f"–î–∞–Ω–Ω—ã–µ —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É (–±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π)")
    
    try:
        await callback.message.edit_text(
            f"üéâ –ì–û–¢–û–í–û! üéâ\n\n"
            f"–í–∞—à –ª–∏—Å—Ç —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n\n"
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!",
            reply_markup=None
        )
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {str(e)}")
        await callback.message.answer(
            f"üéâ –ì–û–¢–û–í–û! üéâ\n\n"
            f"–í–∞—à –ª–∏—Å—Ç —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n\n"
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!"
        )
    
    await callback.answer("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
    await state.clear()

@router.callback_query(SelfAssessmentStates.uploading_confirmation_file, lambda query: query.data == "add_photos")
async def add_photos(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} —Ä–µ—à–∏–ª –¥–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
    
    await callback.message.edit_text(
        "üì± –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è\n\n"
        "–ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å:\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ üìé –∏–ª–∏ üì∑ —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞\n"
        "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç '–ö–∞–º–µ—Ä–∞' –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ –∏–ª–∏ '–ì–∞–ª–µ—Ä–µ—è' –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
        "3Ô∏è‚É£ –°–¥–µ–ª–∞–π—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ\n\n"
        "–õ–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏¬ª –µ—Å–ª–∏ —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìÑ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", callback_data="skip_photo")],
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")]
        ])
    )
    
    await callback.answer()

def get_files_word(count):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ '—Ñ–∞–π–ª' –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–∏—Å–ª–∞"""
    if count % 10 == 1 and count % 100 != 11:
        return "—Ñ–∞–π–ª"
    elif 2 <= count % 10 <= 4 and (count % 100 < 10 or count % 100 >= 20):
        return "—Ñ–∞–π–ª–∞"
    else:
        return "—Ñ–∞–π–ª–æ–≤"

@router.callback_query(lambda query: query.data == "cancel")
async def process_cancel_universal(callback: CallbackQuery, state: FSMContext):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã, —Ä–∞–±–æ—Ç–∞—é—â–∏–π –≤–æ –≤—Å–µ—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö"""
    current_state = await state.get_state()
    logger.debug(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ {current_state}")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await state.clear()
    
    try:
        # –ü—Ä–æ–±—É–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        await callback.message.edit_text(
            "‚ùå –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ª–∏—Å—Ç–∞ —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ\n\n"
            "–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /self_assessment",
            reply_markup=None
        )
    except Exception as e:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–º–µ–Ω—ã: {str(e)}")
        await callback.message.answer(
            "‚ùå –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ª–∏—Å—Ç–∞ —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ\n\n"
            "–í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /self_assessment"
        )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å—ã –∑–∞–≥—Ä—É–∑–∫–∏
    try:
        await callback.answer("–û—Ç–º–µ–Ω–µ–Ω–æ")
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ callback: {str(e)}")

@router.message(SelfAssessmentStates.uploading_confirmation_file)
async def process_unsupported_content(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
    
    await message.answer(
        "‚ùó –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–∞\n\n"
        "–ö–∞–∫ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å:\n"
        "1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ üìé –∏–ª–∏ üì∑ —Ä—è–¥–æ–º —Å –ø–æ–ª–µ–º –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞\n"
        "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç '–ö–∞–º–µ—Ä–∞' –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ –∏–ª–∏ '–ì–∞–ª–µ—Ä–µ—è' –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
        "3Ô∏è‚É£ –°–¥–µ–ª–∞–π—Ç–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ\n\n"
        "–ï—Å–ª–∏ –í—ã —É–∂–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏ –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /done",
        reply_markup=get_cancel_keyboard()
    )

@router.callback_query(SelfAssessmentStates.uploading_confirmation_file, lambda query: query.data == "skip_photo")
async def skip_photo_upload(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} —Ä–µ—à–∏–ª –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏")
    data = await state.get_data()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    event_type = data.get("event_type")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    await save_self_assessment(
        user_id=callback.from_user.id,
        event_type=event_type,
        event_name=data.get("event_name"),
        description=data.get("description"),
        result=data.get("result"),
        social_media_link=data.get("social_media_link"),
        confirmation_files=[],
        contest_id=data.get("contest_id")
    )
    logger.info(f"–î–∞–Ω–Ω—ã–µ —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑—É (–±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π)")
    
    try:
        await callback.message.edit_text(
            f"üéâ –ì–û–¢–û–í–û! üéâ\n\n"
            f"–í–∞—à –ª–∏—Å—Ç —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n\n"
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!",
            reply_markup=None
        )
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {str(e)}")
        await callback.message.answer(
            f"üéâ –ì–û–¢–û–í–û! üéâ\n\n"
            f"–í–∞—à –ª–∏—Å—Ç —Å–∞–º–æ–æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n\n"
            f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!"
        )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–∞–ø—Ä–æ—Å
    await callback.answer("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –±–µ–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π")
    await state.clear()

@router.callback_query(lambda query: query.data == "back_to_event_selection")
async def back_to_event_selection(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"""
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback.from_user.id} –≤–µ—Ä–Ω—É–ª—Å—è –∫ –≤—ã–±–æ—Ä—É —Ç–∏–ø–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
    await state.set_state(SelfAssessmentStates.selecting_event_type)
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π —Å–Ω–æ–≤–∞
    await callback.message.edit_text(
        "üìù –ó–ê–ü–û–õ–ù–ï–ù–ò–ï –õ–ò–°–¢–ê –°–ê–ú–û–û–ë–°–õ–ï–î–û–í–ê–ù–ò–Ø\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ.\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É üëá\n\n"
        "–ï—Å–ª–∏ –Ω—É–∂–Ω—ã–π —Ç–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è¬ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.",
        reply_markup=await get_event_type_keyboard_with_pagination()
    )
    
    # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback –∑–∞–ø—Ä–æ—Å
    await callback.answer() 